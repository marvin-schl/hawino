
// ****************** FbDraftSimpleEstimatorANDControl.cpp *************************
// Generated by TE140x-TargetForMatlabSimulink  2.3.1.1
// MATLAB 9.11.0.2022996 (R2021b) Update 4 (win64)
// TwinCAT 3.1.4024.0
// TwinCAT Target 2.3.1.1
// Beckhoff Automation GmbH & Co. KG     (www.beckhoff.com)
// *************************************************************

#include "TcPch.h"
#pragma hdrstop

#include "FbDraftSimpleEstimatorANDControl.h"

#include "DraftSimpleEstimatorANDControl.h"

#include "ObjClassFactory.h"
using namespace TcMgSdk;

///////////////////////////////////////////////////////////////////////////////
// Definitions
///////////////////////////////////////////////////////////////////////////////
#ifdef _DEBUG
#define new DEBUG_NEW
#endif
#if TC_BUILD<=4024
DEFINE_THIS_FILE()
#endif

///////////////////////////////////////////////////////////////////////////////
// CFbDraftSimpleEstimatorANDControl specific globals
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// CFbDraftSimpleEstimatorANDControl static members
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// CFbDraftSimpleEstimatorANDControl implementation
///////////////////////////////////////////////////////////////////////////////
CFbDraftSimpleEstimatorANDControl::CFbDraftSimpleEstimatorANDControl()
{
	GetFpExceptCtrlSet(TcMgSdk::FpCtrlSection::Init) = FpExcptCtrlSet::Prec53_CallerExceptions;
	GetFpExceptCtrlSet(TcMgSdk::FpCtrlSection::Update) = FpExcptCtrlSet::Prec53_CallerExceptions;


	
}

CFbDraftSimpleEstimatorANDControl::~CFbDraftSimpleEstimatorANDControl()
{

}

bool CFbDraftSimpleEstimatorANDControl::FB_Main()
{

	bool fbMainResult = true;

	

	auto fpState = FpControl(FpCtrlSection::Update);
	::DraftSimpleEstimatorANDControl_step(((RT_MODEL_DraftSimpleEstimator_T*)PDraftSimpleEstimatorANDContr_M));

	FpRestore(fpState);


	return fbMainResult;
}

void CFbDraftSimpleEstimatorANDControl::_FB_Main(ST_FB_Main_FB_DraftSimpleEstimatorANDControl* ST_Param)
{
	ST_Param->result = ((CFbDraftSimpleEstimatorANDControl*)ST_Param->pInst)->FB_Main(  );
}

bool CFbDraftSimpleEstimatorANDControl::FB_exit(bool bInCopyCode)
{

	bool fbExitResult = true;

	auto fpState = FpControl(FpCtrlSection::Init);
	if (((RT_MODEL_DraftSimpleEstimator_T*)PDraftSimpleEstimatorANDContr_M)!=NULL)
	{
		::DraftSimpleEstimatorANDControl_terminate(((RT_MODEL_DraftSimpleEstimator_T*)PDraftSimpleEstimatorANDContr_M));
		PDraftSimpleEstimatorANDContr_M = NULL;
	}

	FpRestore(fpState);


	SingleInstanceRelease();
	__super::Exit(bInCopyCode);

	return fbExitResult;
}

void CFbDraftSimpleEstimatorANDControl::_FB_exit(ST_FB_exit_FB_DraftSimpleEstimatorANDControl* ST_Param)
{
	ST_Param->result = ((CFbDraftSimpleEstimatorANDControl*)ST_Param->pInst)->FB_exit( ST_Param->bInCopyCode );
}

bool CFbDraftSimpleEstimatorANDControl::FB_init(bool bInitRetains, bool bInCopyCode)
{

	bool fbInitResult = true;

	if(fbInitResult)
	{
		PDraftSimpleEstimatorANDContr_M = ::DraftSimpleEstimatorANDControl();
		memset(&(TcModuleInput_InCameraPose),0,sizeof(TcModuleInput_InCameraPose));
		memset(&(TcModuleInput_InNextWaypoint),0,sizeof(TcModuleInput_InNextWaypoint));
		memset(&(TcModuleOutput_Estimator1_vMotors),0,sizeof(TcModuleOutput_Estimator1_vMotors));
		memset(&(TcModuleOutput_Estimator1_vWorld),0,sizeof(TcModuleOutput_Estimator1_vWorld));
		memset(&(TcModuleOutput_OutDebugCase),0,sizeof(TcModuleOutput_OutDebugCase));
		memset(&(TcModuleOutput_OutErrorPose),0,sizeof(TcModuleOutput_OutErrorPose));
		memset(&(TcModuleOutput_OutEstTheta),0,sizeof(TcModuleOutput_OutEstTheta));
		memset(&(TcModuleOutput_OutEstX),0,sizeof(TcModuleOutput_OutEstX));
		memset(&(TcModuleOutput_OutEstY),0,sizeof(TcModuleOutput_OutEstY));
		memset(&(TcModuleOutput_OutVtoMotors),0,sizeof(TcModuleOutput_OutVtoMotors));
		TcModuleInput_InCameraPose[0] = 0;
		TcModuleInput_InCameraPose[1] = 0;
		TcModuleInput_InCameraPose[2] = 0;
		TcModuleInput_InContrID = 0;
		TcModuleInput_InContrIN = 0;
		TcModuleInput_InContrP = 0;
		TcModuleInput_InContrlI = 0;
		TcModuleInput_InNextWaypoint[0] = 0;
		TcModuleInput_InNextWaypoint[1] = 0;
		TcModuleInput_InNextWaypoint[2] = 0;
		TcModuleInput_InVThetafromMotors = 0;
		TcModuleInput_InVXfromMotors = 0;
		TcModuleInput_InVYfromMotors = 0;

		m_pData = nullptr;
		fbInitResult = __super::Init(0,TC_BUILD_MIN,bInitRetains,bInCopyCode);
		if (!fbInitResult)
		{
			error("__super::Init() did not succeed");
		}
	GetFpExceptCtrlSet(TcMgSdk::FpCtrlSection::Init) = FpExcptCtrlSet::Prec53_CallerExceptions;
	GetFpExceptCtrlSet(TcMgSdk::FpCtrlSection::Update) = FpExcptCtrlSet::Prec53_CallerExceptions;


	}

	fbInitResult &= SingleInstanceLock(GUID_NULL);
	if(fbInitResult)
	{
		auto fpState = FpControl(FpCtrlSection::Init);
		::DraftSimpleEstimatorANDControl_initialize(((RT_MODEL_DraftSimpleEstimator_T*)PDraftSimpleEstimatorANDContr_M));
		((RT_MODEL_DraftSimpleEstimator_T*)PDraftSimpleEstimatorANDContr_M)->dwork->InCameraPose_PWORK = reinterpret_cast<PVOID>(&(TcModuleInput_InCameraPose));
		((RT_MODEL_DraftSimpleEstimator_T*)PDraftSimpleEstimatorANDContr_M)->dwork->InContrID_PWORK = reinterpret_cast<PVOID>(&(TcModuleInput_InContrID));
		((RT_MODEL_DraftSimpleEstimator_T*)PDraftSimpleEstimatorANDContr_M)->dwork->InContrIN_PWORK = reinterpret_cast<PVOID>(&(TcModuleInput_InContrIN));
		((RT_MODEL_DraftSimpleEstimator_T*)PDraftSimpleEstimatorANDContr_M)->dwork->InContrP_PWORK = reinterpret_cast<PVOID>(&(TcModuleInput_InContrP));
		((RT_MODEL_DraftSimpleEstimator_T*)PDraftSimpleEstimatorANDContr_M)->dwork->InContrlI_PWORK = reinterpret_cast<PVOID>(&(TcModuleInput_InContrlI));
		((RT_MODEL_DraftSimpleEstimator_T*)PDraftSimpleEstimatorANDContr_M)->dwork->InNextWaypoint_PWORK = reinterpret_cast<PVOID>(&(TcModuleInput_InNextWaypoint));
		((RT_MODEL_DraftSimpleEstimator_T*)PDraftSimpleEstimatorANDContr_M)->dwork->InVThetafromMotors_PWORK = reinterpret_cast<PVOID>(&(TcModuleInput_InVThetafromMotors));
		((RT_MODEL_DraftSimpleEstimator_T*)PDraftSimpleEstimatorANDContr_M)->dwork->InVXfromMotors_PWORK = reinterpret_cast<PVOID>(&(TcModuleInput_InVXfromMotors));
		((RT_MODEL_DraftSimpleEstimator_T*)PDraftSimpleEstimatorANDContr_M)->dwork->InVYfromMotors_PWORK = reinterpret_cast<PVOID>(&(TcModuleInput_InVYfromMotors));
		((RT_MODEL_DraftSimpleEstimator_T*)PDraftSimpleEstimatorANDContr_M)->dwork->vMotors_PWORK = reinterpret_cast<PVOID>(&(TcModuleOutput_Estimator1_vMotors));
		((RT_MODEL_DraftSimpleEstimator_T*)PDraftSimpleEstimatorANDContr_M)->dwork->vWorld_PWORK = reinterpret_cast<PVOID>(&(TcModuleOutput_Estimator1_vWorld));
		((RT_MODEL_DraftSimpleEstimator_T*)PDraftSimpleEstimatorANDContr_M)->dwork->OutDebugCase_PWORK = reinterpret_cast<PVOID>(&(TcModuleOutput_OutDebugCase));
		((RT_MODEL_DraftSimpleEstimator_T*)PDraftSimpleEstimatorANDContr_M)->dwork->OutErrorPose_PWORK = reinterpret_cast<PVOID>(&(TcModuleOutput_OutErrorPose));
		((RT_MODEL_DraftSimpleEstimator_T*)PDraftSimpleEstimatorANDContr_M)->dwork->OutEstTheta_PWORK = reinterpret_cast<PVOID>(&(TcModuleOutput_OutEstTheta));
		((RT_MODEL_DraftSimpleEstimator_T*)PDraftSimpleEstimatorANDContr_M)->dwork->OutEstX_PWORK = reinterpret_cast<PVOID>(&(TcModuleOutput_OutEstX));
		((RT_MODEL_DraftSimpleEstimator_T*)PDraftSimpleEstimatorANDContr_M)->dwork->OutEstY_PWORK = reinterpret_cast<PVOID>(&(TcModuleOutput_OutEstY));
		((RT_MODEL_DraftSimpleEstimator_T*)PDraftSimpleEstimatorANDContr_M)->dwork->OutVtoMotors_PWORK = reinterpret_cast<PVOID>(&(TcModuleOutput_OutVtoMotors));

		FpRestore(fpState);
	}
	else
	{
		error("SingleInstanceLock() did not succeed");
	}

	return fbInitResult;
}

void CFbDraftSimpleEstimatorANDControl::_FB_init(ST_FB_init_FB_DraftSimpleEstimatorANDControl* ST_Param)
{
	ST_Param->result = ((CFbDraftSimpleEstimatorANDControl*)ST_Param->pInst)->FB_init( ST_Param->bInitRetains, ST_Param->bInCopyCode );
}




BEGIN_FUNC_MAP_FB(CFbDraftSimpleEstimatorANDControl)
	FUNC_ENTRY_LIB(VID_DraftSimpleEstimatorANDControl, CID_FB_DRAFTSIMPLEESTIMATORANDCONTROL , "FB_DraftSimpleEstimatorANDControl" "__main", CFbDraftSimpleEstimatorANDControl::_FB_Main)
FUNC_METHOD_ENTRY_LIB(VID_DraftSimpleEstimatorANDControl,CID_FB_DRAFTSIMPLEESTIMATORANDCONTROL , "FB_EXIT", "FB_DraftSimpleEstimatorANDControl" "__FB_exit", CFbDraftSimpleEstimatorANDControl::_FB_exit)
FUNC_METHOD_ENTRY_LIB(VID_DraftSimpleEstimatorANDControl,CID_FB_DRAFTSIMPLEESTIMATORANDCONTROL , "FB_INIT", "FB_DraftSimpleEstimatorANDControl" "__FB_init", CFbDraftSimpleEstimatorANDControl::_FB_init)

END_FUNC_MAP_FB()

DECLARE_FUNCMAP_CREATOR(HandleFuncMap_CFbDraftSimpleEstimatorANDControl)
{
	return CFbDraftSimpleEstimatorANDControl::TcHandleFuncMap(mode, idx, idxcounter, pFncId, pipFnc, ppMethod, ppName, pSignature, pVersion);
}
