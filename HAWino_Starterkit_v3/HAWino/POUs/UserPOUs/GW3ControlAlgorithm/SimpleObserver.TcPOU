<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="SimpleObserver" Id="{61c80a2a-3fb9-47a1-947b-5d5e0c0438c0}" SpecialFunc="None">
    <Declaration><![CDATA[//SimpleObserver:
//Implements a simple observer which assumes the camera position is the true position of the robot whenever camera data arrives. Between new cam data
//odometry is used to correct the robots position. The cameras latency is also considered by correcting the arrived camera data with odometry based correction
//within the time interval of the latency. The observer is implemented in Simulink and is linked within this FB to abstract the implementation of the observer from the
//main control algorithm. Inside the Simulink model all coordinates are considered as world coordinates, following that the transformation of between robot and world coordinates 
//is implemented in ST.
FUNCTION_BLOCK SimpleObserver
VAR_INPUT
	xCameraPose:	RobotPose;
	xVxRobot: 		LREAL;
	xVyRobot: 		LREAL;
	xOmegaRobot: 	LREAL;
	xVxToRobot:		LREAL;
	xVyToRobot:		LREAL;
	xOmegaToRobot:	LREAL;
	theta:			LREAL; //theta for I/O Lineraztion only explicitly Input for FF-Linearization
END_VAR

VAR_OUTPUT
	yObserverdPose: 	RobotPoseSimple;
	yKalmanObservedPose: RobotPoseSimple;
END_VAR

VAR
	//to Simulink
	cameraPoseToSimulink 	AT%Q* 	: ARRAY [0..3] OF LREAL;
	vXworldToSimulink 		AT%Q*	: LREAL;
	vYworldToSimulink 		AT%Q*	: LREAL;
	omegaWorldToSimulink 	AT%Q*	: LREAL;
	vXtoRobotWorldToSimulink 		AT%Q*	: LREAL;
	vYtoRobotWorldToSimulink 		AT%Q*	: LREAL;
	omegaToRobotWorldToSimulink 	AT%Q*	: LREAL;
	
	lpfilter: ARRAY [0..2] OF LPF1;
	
	
	K AT%Q*: ARRAY [0..2,0..2] OF LREAL := [18, 0 ,0,
									  		0, 18, 0,
									  		0, 0, 18];
											
	cameraDelayCyclesToSimulink AT%Q*: SINT := 14;
	UseSimpleNotKalmanToSimulink AT%Q*: INT := 1;
	
	//from Simulink
	estimatedPoseFromSimlink AT%I* 	: ARRAY [0..2] OF LREAL;
	Tfilt: LREAL := 0.1;
	//TEMPORARY++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	kalmanPose AT%I*  	: ARRAY [0..2] OF LREAL;
	i: INT;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//transform roboter velocities into world velocities and pass them to Simulink
Robot2World( 
	vx_robot 	:= xVxRobot,
	vy_robot 	:= xVyRobot,
	omega_robot := xOmegaRobot,
	theta		:= yObserverdPose.theta,
	vx_world 	=> vXworldToSimulink,
	vy_world  	=> vYworldToSimulink,
	omega_world => omegaWorldToSimulink);

cameraPoseToSimulink := RP2ARRAY(xCameraPose);

vXtoRobotWorldToSimulink :=xVxToRobot;
vYtoRobotWorldToSimulink :=xVyToRobot;
omegaToRobotWorldToSimulink := xOmegaToRobot;

yObserverdPose.x := estimatedPoseFromSimlink[0];
yObserverdPose.y := estimatedPoseFromSimlink[1];

//IF estimatedPoseFromSimlink[2] > pi THEN
//	yObserverdPose.theta := -2*pi+estimatedPoseFromSimlink[2];
//ELSIF estimatedPoseFromSimlink[2] < -pi THEN
//	yObserverdPose.theta := 2*pi+estimatedPoseFromSimlink[2];
//ELSE	
yObserverdPose.theta := estimatedPoseFromSimlink[2];
//END_IF
FOR i := 0 TO 2 BY 1 DO
	lpfilter[i](T := Tfilt, K := 1, ts := 10E-3, u := kalmanPose[i]);
END_FOR
// ++++++++++++ JUST TESTING FOR KALMAN!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
yKalmanObservedPose.x := lpfilter[0].y;
yKalmanObservedPose.y := lpfilter[1].y;

//IF kalmanPose[2] > pi THEN
//	yKalmanObservedPose.theta := -2*pi+kalmanPose[2];
//ELSIF kalmanPose[2] < -pi THEN
//	yKalmanObservedPose.theta := 2*pi+kalmanPose[2];
//ELSE	
	yKalmanObservedPose.theta := lpfilter[2].y;
//END_IF
yObserverdPose := yKalmanObservedPose;]]></ST>
    </Implementation>
    <LineIds Name="SimpleObserver">
      <LineId Id="68" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="61" Count="6" />
      <LineId Id="94" Count="0" />
      <LineId Id="93" Count="0" />
      <LineId Id="130" Count="1" />
      <LineId Id="69" Count="0" />
      <LineId Id="133" Count="0" />
      <LineId Id="132" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="176" Count="4" />
      <LineId Id="223" Count="0" />
      <LineId Id="225" Count="0" />
      <LineId Id="181" Count="0" />
      <LineId Id="279" Count="0" />
      <LineId Id="327" Count="1" />
      <LineId Id="57" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="270" Count="0" />
      <LineId Id="272" Count="6" />
      <LineId Id="271" Count="0" />
      <LineId Id="323" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>