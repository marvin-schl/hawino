<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="ReadAssigment" Id="{be20b526-cbde-4de4-80a7-e4ae669afa53}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK ReadAssigment
VAR_INPUT
	assigment : Auftrag;
END_VAR
VAR_OUTPUT
	lastPointsToPickup : ARRAY[0..2] OF RobotPoseSimple;		//Weg zum Abholort (letzte Punkte)
	pointsFromSlotToReader : ARRAY[0..100] OF RobotPoseSimple;	//Weg vom Abholort zur Abmeldung 
	lastPointsToStorage : ARRAY[0..2] OF RobotPoseSimple;		//Weg zum Ablageort (letzte Punkte)
	pointsFromReaderToSlot : ARRAY[0..100] OF RobotPoseSimple;	//Weg vom Abmelden zur Ablage
	lastNodePickUp, lastNodeStorage : RobotPoseSimple;			//letzter Knoten vor Abholung/Ablage
END_VAR
VAR
	pickupLocation, readerCheckOut, readerCheckIn, storageLocation : RobotPoseSimple;	//Koordinaten der Stationen
	Failed : BOOL := FALSE;
	test: INT := 0;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//FB zur Verarbeitung der Daten, die aus dem Auftrag kommen
//es werden Wegpunkte zum Anhängen an die Wegpunktliste und auch Wegpunktlisten zur An- und Abmeldung am RFID Reader generiert

//alle Arrays auf Null
//ZEROS_RobotPoseSimple(pointsFromSlotToReader);
//ZEROS_RobotPoseSimple(pointsFromReaderToSlot);

//RFID Leser für Abmeldung
IF assigment.AbholStation = 1 THEN
	test := 1;
	IF assigment.AbholTasche = 1 THEN
		//RFID links anfahren
		lastNodePickUp := ToRobotPoseSimple(x := 600, y := 3000, theta := -1);
		pickupLocation := ToRobotPoseSimple(x := 898, y := 2838, theta := 0);
		readerCheckOut := ToRobotPoseSimple(x := 886, y := 2936, theta := 0);
	ELSIF assigment.AbholTasche = 2 THEN
		//RFID links anfahren
		lastNodePickUp := ToRobotPoseSimple(x := 600, y := 2600, theta := -1);
		pickupLocation := ToRobotPoseSimple(x := 898, y := 2739, theta := 0);
		readerCheckOut := ToRobotPoseSimple(x := 886, y := 2936, theta := 0);
	ELSIF assigment.AbholTasche = 3 THEN
		//RFID rechts anfahren
		lastNodePickUp := ToRobotPoseSimple(x := 1400, y := 3000, theta := -1);
		pickupLocation := ToRobotPoseSimple(x := 1311, y := 2835, theta := 0);
		readerCheckOut := ToRobotPoseSimple(x := 1303, y := 2935, theta := 0);	
	ELSIF assigment.AbholTasche = 4 THEN
		//RFID rechts anfahren	
		lastNodePickUp := ToRobotPoseSimple(x := 1400, y := 2600, theta := -1);
		pickupLocation := ToRobotPoseSimple(x := 1310, y := 2736, theta := 0);
		readerCheckOut := ToRobotPoseSimple(x := 1303, y := 2935, theta := 0);			
	ELSE
		//Fehler
		Failed := TRUE;
	END_IF
ELSIF assigment.AbholStation = 2 THEN
	IF assigment.AbholTasche = 1 THEN
		//RFID links anfahren
		lastNodePickUp := ToRobotPoseSimple(x := 1800, y := 3000, theta := -1);
		pickupLocation := ToRobotPoseSimple(x := 2099, y := 2829, theta := 0);
		readerCheckOut := ToRobotPoseSimple(x := 2088, y := 2931, theta := 0);	
	ELSIF assigment.AbholTasche = 2 THEN
		//RFID links anfahren
		lastNodePickUp := ToRobotPoseSimple(x := 1800, y := 2600, theta := -1);
		pickupLocation := ToRobotPoseSimple(x := 2099, y := 2731, theta := 0);
		readerCheckOut := ToRobotPoseSimple(x := 2088, y := 2931, theta := 0);	
	ELSIF assigment.AbholTasche = 3 THEN
		//RFID rechts anfahren
		lastNodePickUp := ToRobotPoseSimple(x := 2600, y := 3000, theta := -1);
		pickupLocation := ToRobotPoseSimple(x := 2438, y := 2833, theta := 0);
		readerCheckOut := ToRobotPoseSimple(x := 2433, y := 2937, theta := 0);		
	ELSIF assigment.AbholTasche = 4 THEN
		//RFID rechts anfahren
		lastNodePickUp := ToRobotPoseSimple(x := 2600, y := 2600, theta := -1);
		pickupLocation := ToRobotPoseSimple(x := 2437, y := 2732, theta := 0);
		readerCheckOut := ToRobotPoseSimple(x := 2433, y := 2937, theta := 0);			
	ELSE
		//Fehler
		Failed := TRUE;
	END_IF
ELSIF assigment.AbholStation = 3 THEN
	IF assigment.AbholTasche = 1 THEN
		//RFID links anfahren
		lastNodePickUp := ToRobotPoseSimple(x := 3000, y := 3000, theta := -1);
		pickupLocation := ToRobotPoseSimple(x := 3229, y := 2837, theta := 0);
		readerCheckOut := ToRobotPoseSimple(x := 3235, y := 2941, theta := 0);
	ELSIF assigment.AbholTasche = 2 THEN
		//RFID links anfahren
		lastNodePickUp := ToRobotPoseSimple(x := 3000, y := 2600, theta := -1);
		pickupLocation := ToRobotPoseSimple(x := 3228, y := 2732, theta := 0);
		readerCheckOut := ToRobotPoseSimple(x := 3235, y := 2941, theta := 0);
	ELSIF assigment.AbholTasche = 3 THEN
		//RFID rechts anfahren
		lastNodePickUp := ToRobotPoseSimple(x := 3800, y := 3000, theta := -1);
		pickupLocation := ToRobotPoseSimple(x := 3653, y := 2840, theta := 0);
		readerCheckOut := ToRobotPoseSimple(x := 3658, y := 2939, theta := 0);	
	ELSIF assigment.AbholTasche = 4 THEN
		//RFID rechts anfahren
		lastNodePickUp := ToRobotPoseSimple(x := 3800, y := 2600, theta := -1);
		pickupLocation := ToRobotPoseSimple(x := 3650, y := 2732, theta := 0);
		readerCheckOut := ToRobotPoseSimple(x := 3658, y := 2939, theta := 0);			
	ELSE
		//Fehler
		Failed := TRUE;
	END_IF
ELSIF assigment.AbholStation = 4 THEN
	IF assigment.AbholTasche = 1 THEN
		//RFID links anfahren
		lastNodePickUp := ToRobotPoseSimple(x := 4200, y := 3000, theta := -1);
		pickupLocation := ToRobotPoseSimple(x := 4450, y := 2838, theta := 0);
		readerCheckOut := ToRobotPoseSimple(x := 4449, y := 2937, theta := 0);
	ELSIF assigment.AbholTasche = 2 THEN
		//RFID links anfahren
		lastNodePickUp := ToRobotPoseSimple(x := 4200, y := 2600, theta := -1);
		pickupLocation := ToRobotPoseSimple(x := 4449, y := 2732, theta := 0);
		readerCheckOut := ToRobotPoseSimple(x := 4449, y := 2937, theta := 0);
	ELSIF assigment.AbholTasche = 3 THEN
		//RFID rechts anfahren
		lastNodePickUp := ToRobotPoseSimple(x := 5000, y := 3000, theta := -1);
		pickupLocation := ToRobotPoseSimple(x := 4879, y := 2844, theta := 0);
		readerCheckOut := ToRobotPoseSimple(x := 4893, y := 2946, theta := 0);	
	ELSIF assigment.AbholTasche = 4 THEN
		//RFID rechts anfahren
		lastNodePickUp := ToRobotPoseSimple(x := 5000, y := 2600, theta := -1);
		pickupLocation := ToRobotPoseSimple(x := 4893, y := 2741, theta := 0);
		readerCheckOut := ToRobotPoseSimple(x := 4893, y := 2946, theta := 0);			
	ELSE
		//Fehler
		Failed := TRUE;
	END_IF
ELSE
	//Fehler
	Failed := TRUE;		
END_IF


//Auswählen RFID Leser für Anmeldung
IF assigment.AblageStation = 1 THEN
	IF assigment.AblageTasche = 1 THEN
		//RFID links anfahren
		lastNodeStorage := ToRobotPoseSimple(x := 600, y := 3000, theta := -1); //600?
		storageLocation := ToRobotPoseSimple(x := 898, y := 2838, theta := 0);
		readerCheckIn := ToRobotPoseSimple(x := 886, y := 2936, theta := 0);
	ELSIF assigment.AblageTasche = 2 THEN
		//RFID links anfahren
		lastNodeStorage := ToRobotPoseSimple(x := 600, y := 2600, theta := -1); //600?
		storageLocation := ToRobotPoseSimple(x := 898, y := 2739, theta := 0);
		readerCheckIn := ToRobotPoseSimple(x := 886, y := 2936, theta := 0);
	ELSIF assigment.AblageTasche = 3 THEN
		//RFID rechts anfahren	
		lastNodeStorage := ToRobotPoseSimple(x := 1400, y := 3000, theta := -1);
		storageLocation := ToRobotPoseSimple(x := 1311, y := 2835, theta := 0);
		readerCheckIn := ToRobotPoseSimple(x := 1303, y := 2935, theta := 0);	
	ELSIF assigment.AblageTasche = 4 THEN
		//RFID rechts anfahren	
		lastNodeStorage := ToRobotPoseSimple(x := 1400, y := 2600, theta := -1);
		storageLocation := ToRobotPoseSimple(x := 1310, y := 2736, theta := 0);
		readerCheckIn := ToRobotPoseSimple(x := 1303, y := 2935, theta := 0);		
	ELSE
		//Fehler
		Failed := TRUE;
	END_IF
ELSIF assigment.AblageStation = 2 THEN
	IF assigment.AblageTasche = 1 THEN
		//RFID links anfahren
		lastNodeStorage := ToRobotPoseSimple(x := 1800, y := 3000, theta := -1);
		storageLocation := ToRobotPoseSimple(x := 2099, y := 2829, theta := 0);
		readerCheckIn := ToRobotPoseSimple(x := 2088, y := 2931, theta := 0);	
	ELSIF assigment.AblageTasche = 2 THEN
		//RFID links anfahren
		lastNodeStorage := ToRobotPoseSimple(x := 1800, y := 2600, theta := -1);
		storageLocation := ToRobotPoseSimple(x := 2099, y := 2731, theta := 0);
		readerCheckIn := ToRobotPoseSimple(x := 2088, y := 2931, theta := 0);
	ELSIF assigment.AblageTasche = 3 THEN
		//RFID rechts anfahren	
		lastNodeStorage := ToRobotPoseSimple(x := 2600, y := 3000, theta := -1);
		storageLocation := ToRobotPoseSimple(x := 2438, y := 2833, theta := 0);
		readerCheckIn := ToRobotPoseSimple(x := 2433, y := 2937, theta := 0);	
	ELSIF assigment.AblageTasche = 4 THEN
		//RFID rechts anfahren	
		lastNodeStorage := ToRobotPoseSimple(x := 2600, y := 2600, theta := -1);
		storageLocation := ToRobotPoseSimple(x := 2437, y := 2732, theta := 0);
		readerCheckIn := ToRobotPoseSimple(x := 2433, y := 2937, theta := 0);			
	ELSE
		//Fehler
		Failed := TRUE;
	END_IF
ELSIF assigment.AblageStation = 3 THEN
	IF assigment.AblageTasche = 1 THEN
		//RFID links anfahren
		lastNodeStorage := ToRobotPoseSimple(x := 3000, y := 3000, theta := -1);
		storageLocation := ToRobotPoseSimple(x := 3229, y := 2837, theta := 0);
		readerCheckIn := ToRobotPoseSimple(x := 3235, y := 2941, theta := 0);
	ELSIF assigment.AblageTasche = 2 THEN
		//RFID links anfahren
		lastNodeStorage := ToRobotPoseSimple(x := 3000, y := 2600, theta := -1);
		storageLocation := ToRobotPoseSimple(x := 3228, y := 2732, theta := 0);
		readerCheckIn := ToRobotPoseSimple(x := 3235, y := 2941, theta := 0);
	ELSIF assigment.AblageTasche = 3 THEN
		//RFID rechts anfahren
		lastNodeStorage := ToRobotPoseSimple(x := 3800, y := 3000, theta := -1);
		storageLocation := ToRobotPoseSimple(x := 3653, y := 2840, theta := 0);
		readerCheckIn := ToRobotPoseSimple(x := 3658, y := 2939, theta := 0);		
	ELSIF assigment.AblageTasche = 4 THEN
		//RFID rechts anfahren	
		lastNodeStorage := ToRobotPoseSimple(x := 3800, y := 2600, theta := -1);
		storageLocation := ToRobotPoseSimple(x := 3650, y := 2732, theta := 0);
		readerCheckIn := ToRobotPoseSimple(x := 3658, y := 2939, theta := 0);		
	ELSE
		//Fehler
		Failed := TRUE;
	END_IF
ELSIF assigment.AblageStation = 4 THEN
	IF assigment.AblageTasche = 1 THEN
		//RFID links anfahren
		lastNodeStorage := ToRobotPoseSimple(x := 4200, y := 3000, theta := -1);
		storageLocation := ToRobotPoseSimple(x := 4450, y := 2838, theta := 0);
		readerCheckIn := ToRobotPoseSimple(x := 4449, y := 2937, theta := 0);
	ELSIF assigment.AblageTasche = 2 THEN
		//RFID links anfahren
		lastNodeStorage := ToRobotPoseSimple(x := 4200, y := 2600, theta := -1);
		storageLocation := ToRobotPoseSimple(x := 4449, y := 2732, theta := 0);
		readerCheckIn := ToRobotPoseSimple(x := 4449, y := 2937, theta := 0);
	ELSIF assigment.AblageTasche = 3 THEN
		//RFID rechts anfahren	
		lastNodeStorage := ToRobotPoseSimple(x := 5000, y := 3000, theta := -1);
		storageLocation := ToRobotPoseSimple(x := 4879, y := 2844, theta := 0);
		readerCheckIn := ToRobotPoseSimple(x := 4893, y := 2946, theta := 0);
	ELSIF assigment.AblageTasche = 4 THEN
		//RFID rechts anfahren	
		lastNodeStorage := ToRobotPoseSimple(x := 5000, y := 2600, theta := -1);
		storageLocation := ToRobotPoseSimple(x := 4893, y := 2741, theta := 0);
		readerCheckIn := ToRobotPoseSimple(x := 4893, y := 2946, theta := 0);		
	ELSE
		//Fehler
		Failed := TRUE;
	END_IF
ELSE
	//Fehler
	Failed := TRUE;		
END_IF


//Abholort (3 Punkte) an Wegpunktliste anfügen
//lastPointsToPickup[0] := lastNodePickUp;
lastPointsToPickup[0] := ToRobotPoseSimple(x := lastNodePickUp.x, y := pickupLocation.y, theta := pickupLocation.theta);
lastPointsToPickup[1] := pickupLocation;

//erstellen 3 Wegpunkte für fahren von Tasche zu RFID Leser
pointsFromSlotToReader[0] := ToRobotPoseSimple(x := lastNodePickUp.x, y := pickupLocation.y, theta := pickupLocation.theta);
pointsFromSlotToReader[1] := ToRobotPoseSimple(x := lastNodePickUp.x, y := readerCheckOut.y, theta := readerCheckOut.theta);
pointsFromSlotToReader[2] := readerCheckOut;

//Ablageort (3 Punkte) an Wegpunktliste anfügen (Ankunft Reader)
//lastPointsToStorage[0] := lastNodeStorage;
lastPointsToStorage[0] := ToRobotPoseSimple(x := lastNodeStorage.x, y := readerCheckIn.y, theta := readerCheckIn.theta);
lastPointsToStorage[1] := readerCheckIn;

//3 Wegpunkte von RFID Leser zu Ablageort
pointsFromReaderToSlot[0] := ToRobotPoseSimple(x := lastNodeStorage.x, y := readerCheckIn.y, theta := readerCheckIn.theta);
pointsFromReaderToSlot[1] := ToRobotPoseSimple(x := lastNodeStorage.x, y := storageLocation.y, theta := storageLocation.theta);
pointsFromReaderToSlot[2] := storageLocation;
]]></ST>
    </Implementation>
    <LineIds Name="ReadAssigment">
      <LineId Id="9" Count="0" />
      <LineId Id="349" Count="0" />
      <LineId Id="369" Count="0" />
      <LineId Id="365" Count="2" />
      <LineId Id="57" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="370" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="113" Count="0" />
      <LineId Id="117" Count="2" />
      <LineId Id="112" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="238" Count="1" />
      <LineId Id="237" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="116" Count="0" />
      <LineId Id="240" Count="0" />
      <LineId Id="254" Count="0" />
      <LineId Id="268" Count="0" />
      <LineId Id="115" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="241" Count="0" />
      <LineId Id="255" Count="0" />
      <LineId Id="269" Count="0" />
      <LineId Id="26" Count="1" />
      <LineId Id="334" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="149" Count="1" />
      <LineId Id="242" Count="0" />
      <LineId Id="256" Count="0" />
      <LineId Id="270" Count="0" />
      <LineId Id="154" Count="1" />
      <LineId Id="243" Count="0" />
      <LineId Id="257" Count="0" />
      <LineId Id="271" Count="0" />
      <LineId Id="156" Count="1" />
      <LineId Id="244" Count="0" />
      <LineId Id="258" Count="0" />
      <LineId Id="272" Count="0" />
      <LineId Id="158" Count="1" />
      <LineId Id="245" Count="0" />
      <LineId Id="259" Count="0" />
      <LineId Id="273" Count="0" />
      <LineId Id="160" Count="1" />
      <LineId Id="335" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="162" Count="1" />
      <LineId Id="246" Count="0" />
      <LineId Id="260" Count="0" />
      <LineId Id="274" Count="0" />
      <LineId Id="164" Count="1" />
      <LineId Id="247" Count="0" />
      <LineId Id="261" Count="0" />
      <LineId Id="275" Count="0" />
      <LineId Id="166" Count="1" />
      <LineId Id="248" Count="0" />
      <LineId Id="262" Count="0" />
      <LineId Id="276" Count="0" />
      <LineId Id="168" Count="1" />
      <LineId Id="249" Count="0" />
      <LineId Id="263" Count="0" />
      <LineId Id="277" Count="0" />
      <LineId Id="170" Count="1" />
      <LineId Id="336" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="172" Count="1" />
      <LineId Id="250" Count="0" />
      <LineId Id="264" Count="0" />
      <LineId Id="278" Count="0" />
      <LineId Id="174" Count="1" />
      <LineId Id="251" Count="0" />
      <LineId Id="265" Count="0" />
      <LineId Id="279" Count="0" />
      <LineId Id="176" Count="1" />
      <LineId Id="252" Count="0" />
      <LineId Id="266" Count="0" />
      <LineId Id="280" Count="0" />
      <LineId Id="178" Count="1" />
      <LineId Id="253" Count="0" />
      <LineId Id="267" Count="0" />
      <LineId Id="281" Count="0" />
      <LineId Id="180" Count="1" />
      <LineId Id="337" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="52" Count="1" />
      <LineId Id="338" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="182" Count="1" />
      <LineId Id="286" Count="1" />
      <LineId Id="285" Count="0" />
      <LineId Id="184" Count="1" />
      <LineId Id="289" Count="1" />
      <LineId Id="288" Count="0" />
      <LineId Id="186" Count="1" />
      <LineId Id="292" Count="1" />
      <LineId Id="291" Count="0" />
      <LineId Id="188" Count="1" />
      <LineId Id="295" Count="1" />
      <LineId Id="294" Count="0" />
      <LineId Id="190" Count="1" />
      <LineId Id="339" Count="0" />
      <LineId Id="72" Count="1" />
      <LineId Id="192" Count="1" />
      <LineId Id="298" Count="1" />
      <LineId Id="297" Count="0" />
      <LineId Id="194" Count="1" />
      <LineId Id="301" Count="1" />
      <LineId Id="300" Count="0" />
      <LineId Id="196" Count="1" />
      <LineId Id="304" Count="1" />
      <LineId Id="303" Count="0" />
      <LineId Id="198" Count="1" />
      <LineId Id="307" Count="1" />
      <LineId Id="306" Count="0" />
      <LineId Id="200" Count="1" />
      <LineId Id="340" Count="0" />
      <LineId Id="80" Count="1" />
      <LineId Id="202" Count="1" />
      <LineId Id="310" Count="1" />
      <LineId Id="309" Count="0" />
      <LineId Id="204" Count="1" />
      <LineId Id="313" Count="1" />
      <LineId Id="312" Count="0" />
      <LineId Id="206" Count="1" />
      <LineId Id="316" Count="1" />
      <LineId Id="315" Count="0" />
      <LineId Id="208" Count="1" />
      <LineId Id="319" Count="1" />
      <LineId Id="318" Count="0" />
      <LineId Id="210" Count="1" />
      <LineId Id="341" Count="0" />
      <LineId Id="88" Count="1" />
      <LineId Id="212" Count="1" />
      <LineId Id="322" Count="1" />
      <LineId Id="321" Count="0" />
      <LineId Id="214" Count="1" />
      <LineId Id="325" Count="1" />
      <LineId Id="324" Count="0" />
      <LineId Id="216" Count="1" />
      <LineId Id="328" Count="1" />
      <LineId Id="327" Count="0" />
      <LineId Id="218" Count="1" />
      <LineId Id="331" Count="1" />
      <LineId Id="330" Count="0" />
      <LineId Id="220" Count="1" />
      <LineId Id="342" Count="0" />
      <LineId Id="96" Count="2" />
      <LineId Id="343" Count="0" />
      <LineId Id="64" Count="0" />
      <LineId Id="124" Count="1" />
      <LineId Id="130" Count="0" />
      <LineId Id="145" Count="0" />
      <LineId Id="134" Count="1" />
      <LineId Id="127" Count="1" />
      <LineId Id="137" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="138" Count="1" />
      <LineId Id="59" Count="0" />
      <LineId Id="140" Count="2" />
      <LineId Id="100" Count="0" />
      <LineId Id="99" Count="0" />
      <LineId Id="146" Count="2" />
      <LineId Id="143" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>