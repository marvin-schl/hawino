<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="GW2DummyPRG" Id="{0787e41d-4eca-4238-b335-d5e78c5610c1}" SpecialFunc="None">
    <Declaration><![CDATA[//GW2DummyPRG:
// basic dummy implementation of GW2 functionality for testing purposes
// with 'circle', 'square', 'point' certain hard coded trajectories can be loaded
// with 'set' the loaded trajectory gets communicated over the defined interface to GW3
// with 'enable' the roboter can be started
PROGRAM GW2DummyPRG
VAR
	roboter: TrajectoryControl;

	set: BOOL 		:= FALSE;
	circle: BOOL	:= FALSE;
	square: BOOL	:= FALSE;
	point: BOOL 	:= FALSE;
	enable: BOOL 	:= FALSE;
	
	wpl: ARRAY [0..100] OF RobotPoseSimple;

	//Point
	xRef: LREAL 	:= 0;
	yRef: LREAL 	:= 0;
	thetaRef: LREAL := 0;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[roboter.xBoEnable := enable; 
roboter.newWaypointListAvailable := set;

IF circle THEN
	wpl := generateWPLCircle();
ELSIF square THEN
	wpl := generateWPLRect();
ELSIF point THEN
	wpl := generateWPLPoint();
ELSIF set THEN
	roboter.setWaypointList(wpl);
	IF roboter.yControllerState = ControllerState.calcTrajectory THEN
		set := FALSE;
	END_IF
END_IF

]]></ST>
    </Implementation>
    <Method Name="generateWPLCircle" Id="{723e581b-c10b-48a5-af6d-0cb88e71c220}">
      <Declaration><![CDATA[METHOD generateWPLCircle : ARRAY[0..100] OF RobotPoseSimple 
VAR
	KreisX: ARRAY[0..9] OF LREAL := [4000,4200,4500,4700,5000,4700,4500,4200,4000,-1];
	KreisY: ARRAY[0..9] OF LREAL := [1500,1200,1000,1200,1500,1700,2000,1700,1500,-1];
	Theta: LREAL := pi/4;
	wpl:  ARRAY[0..100] OF RobotPoseSimple;
	i: INT := 0;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
FOR i := 0 TO 100 DO
	IF KreisX[i] <> -1 AND  KreisY[i] <> -1  THEN
		wpl[i].x 		:= KreisX[i];
		wpl[i].y 		:= KreisY[i];
		wpl[i].theta	:= Theta;
	ELSE 
		wpl[i].x 		:= -1;
		wpl[i].y 		:= -1;
		wpl[i].theta	:= -1;
	END_IF
END_FOR

generateWPLCircle := wpl;]]></ST>
      </Implementation>
    </Method>
    <Method Name="generateWPLPoint" Id="{a6a5c86f-190e-40b9-ad19-053d06bc81af}">
      <Declaration><![CDATA[METHOD generateWPLPoint : ARRAY[0..100] OF RobotPoseSimple 
VAR
	wpl:  ARRAY[0..100] OF RobotPoseSimple;
	i : INT := 0;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := 0 TO 100 DO
	IF i = 0 THEN
		wpl[i].x 		:= xRef;
		wpl[i].y 		:= yRef;
		wpl[i].theta	:= thetaRef;
	ELSE 
		wpl[i].x 		:= -1;
		wpl[i].y 		:= -1;
		wpl[i].theta	:= -1;
	END_IF
END_FOR
generateWPLPoint := wpl;]]></ST>
      </Implementation>
    </Method>
    <Method Name="generateWPLRect" Id="{15904306-5952-490d-bc55-51a6d5a51035}">
      <Declaration><![CDATA[METHOD generateWPLRect : ARRAY[0..100] OF RobotPoseSimple
VAR
	RechteckX: ARRAY[0..10] OF LREAL := [1000,3000,	5000,5000,5000,3000,1000,1000,1000, -1];
	RechteckY: ARRAY[0..10] OF LREAL := [1000,1000,	1000,1500,2000,2000,2000,1500,1000, -1];
	Theta:	   ARRAY[0..10] OF LREAL := [-1, 1000,	1000,1500,2000,2000,2000,1500, pi, -1];
	
	//RechteckX: ARRAY[0..10] OF LREAL := [4450, 4150, 4150, 5160, 5160, 4859, -1];
	//RechteckY: ARRAY[0..10] OF LREAL :=  [2043, 2043, 1530, 1530, 2033, 2033, -1];
	//RechteckX:  ARRAY[0..10] OF LREAL := [5740, 4480, -1];
	//RechteckY: ARRAY[0..10] OF LREAL :=  [2730, 2734, -1];
	
	wpl:  ARRAY[0..100] OF RobotPoseSimple;
	i: INT := 0;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
FOR i := 0 TO 100 DO
	IF   RechteckX[i] <> -1 AND  RechteckY[i] <> -1  THEN
		wpl[i].x 		:= RechteckX[i];
		wpl[i].y 		:= RechteckY[i];
		wpl[i].theta	:= Theta[i];
	ELSE 
		wpl[i].x 		:= -1;
		wpl[i].y 		:= -1;
		wpl[i].theta	:= -1;
	END_IF
END_FOR

generateWPLRect := wpl;]]></ST>
      </Implementation>
    </Method>
    <Method Name="generateWPLStation" Id="{72e79a22-8f7a-4c32-8372-d9d95c309729}">
      <Declaration><![CDATA[METHOD generateWPLStation : ARRAY[0..100] OF RobotPoseSimple
VAR
	x: ARRAY[0..10] OF LREAL := [1000,3000,	5000,5000,5000,3000,1000,1000,1000, -1];
	y: ARRAY[0..10] OF LREAL := [1000,1000,	1000,1500,2000,2000,2000,1500,1000, -1];
	theta:	   ARRAY[0..10] OF LREAL := [-1, 1000,	1000,1500,2000,2000,2000,1500, pi, -1];
	wpl:  ARRAY[0..100] OF RobotPoseSimple;
	i: INT := 0;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := 0 TO 100 DO
	IF   x[i] <> -1 AND  y[i] <> -1  THEN
		wpl[i].x 		:= x[i];
		wpl[i].y 		:= y[i];
		wpl[i].theta	:= Theta[i];
	ELSE 
		wpl[i].x 		:= -1;
		wpl[i].y 		:= -1;
		wpl[i].theta	:= -1;
	END_IF
END_FOR

generateWPLStation := wpl;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="GW2DummyPRG">
      <LineId Id="53" Count="0" />
      <LineId Id="98" Count="1" />
      <LineId Id="77" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="73" Count="1" />
      <LineId Id="59" Count="2" />
      <LineId Id="122" Count="2" />
      <LineId Id="48" Count="0" />
      <LineId Id="97" Count="0" />
      <LineId Id="95" Count="0" />
    </LineIds>
    <LineIds Name="GW2DummyPRG.generateWPLCircle">
      <LineId Id="11" Count="12" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="GW2DummyPRG.generateWPLPoint">
      <LineId Id="10" Count="9" />
      <LineId Id="8" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="GW2DummyPRG.generateWPLRect">
      <LineId Id="16" Count="12" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="GW2DummyPRG.generateWPLStation">
      <LineId Id="20" Count="11" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>