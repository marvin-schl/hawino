// ****************** simpleObserver2W32.cpp *************************
// Generated by TE140x-TargetForMatlabSimulink  2.3.1.1
// MATLAB 9.11.0.2022996 (R2021b) Update 4 (win64)
// TwinCAT 3.1.4024.0
// TwinCAT Target 2.3.1.1
// Beckhoff Automation GmbH & Co. KG     (www.beckhoff.com)
// *************************************************************
#include "TcPch.h"
#pragma hdrstop

#include "simpleObserver2Ctrl.h"
#include "TcSysW32_i.c"

CComModule _Module;

const   CLSID   IID_simpleObserver2Ctrl		=  {0xDF44B0E9, 0x2CEE, 0x4BAD, {0x86, 0x18, 0x39, 0x30, 0xFC, 0xFA, 0x7A, 0xDF}};
const   CLSID   LIBID_simpleObserver2W32Lib	=  {0xC3A7B0F1, 0x2096, 0x4B25, {0x8F, 0x3C, 0x06, 0x0D, 0x56, 0xA3, 0x50, 0x49}};
const   CLSID   CLSID_simpleObserver2Ctrl   =  {0x504C3D65, 0x1990, 0x43B2, {0x9F, 0x18, 0xE3, 0x0D, 0xF4, 0x57, 0x6E, 0x9B}};

BEGIN_OBJECT_MAP(ObjectMap)
OBJECT_ENTRY(CLSID_simpleObserver2Ctrl, CsimpleObserver2Ctrl)
END_OBJECT_MAP()

/////////////////////////////////////////////////////////////////////////////
// DLL Entry Point

extern "C"
BOOL WINAPI DllMain(HANDLE hInstance, DWORD dwReason, LPVOID /*lpReserved*/)
{
	if (dwReason == DLL_PROCESS_ATTACH)
	{
		_Module.Init(ObjectMap, (HINSTANCE)hInstance);
#ifndef UNDER_CE
		DisableThreadLibraryCalls((HINSTANCE)hInstance);
#endif
	}
	else if (dwReason == DLL_PROCESS_DETACH)
		_Module.Term();
	return TRUE;    // ok
}

/////////////////////////////////////////////////////////////////////////////
// Used to determine whether the DLL can be unloaded by OLE

STDAPI DllCanUnloadNow(void)
{
	return (_Module.GetLockCount()==0) ? S_OK : S_FALSE;
}

/////////////////////////////////////////////////////////////////////////////
// Returns a class factory to create an object of the requested type

STDAPI DllGetClassObject(REFCLSID rclsid, REFIID riid, LPVOID* ppv)
{
	return _Module.GetClassObject(rclsid, riid, ppv);
}

/////////////////////////////////////////////////////////////////////////////
// DllRegisterServer - Adds entries to the system registry

STDAPI DllRegisterServer(void)
{
	// registers object, typelib and all interfaces in typelib
	return _Module.RegisterServer(TRUE);
}

/////////////////////////////////////////////////////////////////////////////
// DllUnregisterServer - Removes entries from the system registry

STDAPI DllUnregisterServer(void)
{
	_Module.UnregisterServer();
	return S_OK;
}

/////////////////////////////////////////////////////////////////////////////
STDAPI DllGetTcCtrl(ITcCtrl** ppCtrl)
{
	if ( ppCtrl == NULL )
		return E_POINTER;

	CComObject<CsimpleObserver2Ctrl>* pCsimpleObserver2Ctrl = new CComObject<CsimpleObserver2Ctrl>();
	if (pCsimpleObserver2Ctrl == NULL) return E_POINTER;
	return pCsimpleObserver2Ctrl->QueryInterface(IID_ITcCtrl, reinterpret_cast<void**>(ppCtrl));
}
