// ****************** TcComsimpleObserver2withKalman.h *************************
// Generated by TE140x-TargetForMatlabSimulink  2.3.1.1
// MATLAB 9.11.0.2022996 (R2021b) Update 4 (win64)
// TwinCAT 3.1.4024.0
// TwinCAT Target 2.3.1.1
// Beckhoff Automation GmbH & Co. KG     (www.beckhoff.com)
// *************************************************************
#ifndef _TcComsimpleObserver2withKalman__h_INCLUDED
#define _TcComsimpleObserver2withKalman__h_INCLUDED


#include "TcInterfaces.h"
#include "TcIoInterfaces.h"
#include "TcMatSimTcCom.h"
#include "simpleObserver2withKalmanInternal.h"

#include "simpleObserver2withKalmanInterfaces.h"
#include "simpleObserver2withKalmanVersion.h"


class CTcComsimpleObserver2withKalman :
	public TcMatSim::GeneratedTcCom,
	public ITcWatchSource,
	public ITcCyclic,
	public ITcPostCyclic,
	public ITcADI,
	public ITcsimpleObserver2withKalman
{
public:
	DECLARE_IUNKNOWN_DERIVED()
	DECLARE_ITCOMOBJECT_SETSTATE()
	DECLARE_ITCWATCHSOURCE()
	DECLARE_OBJDATAAREA_MAP()
	DECLARE_OBJPARAWATCH_MAP()
	DECLARE_PARA()
	DECLARE_ITCADI()
	DECLARE_IPERSIST_LIB()


	// Constructor
	CTcComsimpleObserver2withKalman();

	// Destructor
	~CTcComsimpleObserver2withKalman();

	HRESULT TCOMAPI CycleUpdate(ITcTask* ipTask, ITcUnknown* ipCaller, ULONG_PTR context);
	HRESULT TCOMAPI PostCyclicUpdate(ITcTask* ipTask, ITcUnknown* ipCaller, ULONG_PTR context);
	HRESULT Update(ITcTask* ipTask, ULONG_PTR context);
	HRESULT CheckAndAdaptCycleTimes();

	// ITcsimpleObserver2withKalman
	HRESULT TCOMAPI simpleObserver2withKalman_step();



	simpleObserver2withKalman_AdditionalInports AdditionalInports;
	simpleObserver2withKalman_AdditionalOutports AdditionalOutports;
	RT_MODEL_simpleObserver2withK_T* PsimpleObserver2withKalman_M;



};
			

#endif // _TcComsimpleObserver2withKalman__h_INCLUDED