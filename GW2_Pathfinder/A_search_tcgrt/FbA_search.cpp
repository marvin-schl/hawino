
// ****************** FbA_search.cpp *************************
// Generated by TE140x-TargetForMatlabSimulink  2.3.1.1
// MATLAB 9.11.0.2022996 (R2021b) Update 4 (win64)
// TwinCAT 3.1.4024.0
// TwinCAT Target 2.3.1.1
// Beckhoff Automation GmbH & Co. KG     (www.beckhoff.com)
// *************************************************************

#include "TcPch.h"
#pragma hdrstop

#include "FbA_search.h"

#include "A_search.h"

#include "ObjClassFactory.h"
using namespace TcMgSdk;

///////////////////////////////////////////////////////////////////////////////
// Definitions
///////////////////////////////////////////////////////////////////////////////
#ifdef _DEBUG
#define new DEBUG_NEW
#endif
#if TC_BUILD<=4024
DEFINE_THIS_FILE()
#endif

///////////////////////////////////////////////////////////////////////////////
// CFbA_search specific globals
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// CFbA_search static members
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// CFbA_search implementation
///////////////////////////////////////////////////////////////////////////////
CFbA_search::CFbA_search()
{
	GetFpExceptCtrlSet(TcMgSdk::FpCtrlSection::Init) = FpExcptCtrlSet::Prec53_CallerExceptions;
	GetFpExceptCtrlSet(TcMgSdk::FpCtrlSection::Update) = FpExcptCtrlSet::Prec53_CallerExceptions;


	
}

CFbA_search::~CFbA_search()
{

}

bool CFbA_search::FB_Main()
{

	bool fbMainResult = true;

	

	auto fpState = FpControl(FpCtrlSection::Update);
	::A_search_step(((RT_MODEL_A_search_T*)PA_search_M));

	FpRestore(fpState);


	return fbMainResult;
}

void CFbA_search::_FB_Main(ST_FB_Main_FB_A_search* ST_Param)
{
	ST_Param->result = ((CFbA_search*)ST_Param->pInst)->FB_Main(  );
}

bool CFbA_search::FB_exit(bool bInCopyCode)
{

	bool fbExitResult = true;

	auto fpState = FpControl(FpCtrlSection::Init);
	if (((RT_MODEL_A_search_T*)PA_search_M)!=NULL)
	{
		::A_search_terminate(((RT_MODEL_A_search_T*)PA_search_M));
		PA_search_M = NULL;
	}

	FpRestore(fpState);


	SingleInstanceRelease();
	__super::Exit(bInCopyCode);

	return fbExitResult;
}

void CFbA_search::_FB_exit(ST_FB_exit_FB_A_search* ST_Param)
{
	ST_Param->result = ((CFbA_search*)ST_Param->pInst)->FB_exit( ST_Param->bInCopyCode );
}

bool CFbA_search::FB_init(bool bInitRetains, bool bInCopyCode)
{

	bool fbInitResult = true;

	if(fbInitResult)
	{
		PA_search_M = ::A_search();
		memset(&(TcModuleOutput_TCModuleOutput),0,sizeof(TcModuleOutput_TCModuleOutput));
		memset(&(TcModuleOutput_TCModuleOutput1),0,sizeof(TcModuleOutput_TCModuleOutput1));
		TcModuleInput_TCModuleInput1 = 0;
		TcModuleInput_TCModuleInput2 = 0;
		TcModuleInput_TCModuleInput3 = 0;
		TcModuleInput_TCModuleInput4 = 0;
		TcModuleInput_TCModuleInput5 = 0;
		TcModuleInput_TCModuleInput6 = 0;

		m_pData = nullptr;
		fbInitResult = __super::Init(0,TC_BUILD_MIN,bInitRetains,bInCopyCode);
		if (!fbInitResult)
		{
			error("__super::Init() did not succeed");
		}
	GetFpExceptCtrlSet(TcMgSdk::FpCtrlSection::Init) = FpExcptCtrlSet::Prec53_CallerExceptions;
	GetFpExceptCtrlSet(TcMgSdk::FpCtrlSection::Update) = FpExcptCtrlSet::Prec53_CallerExceptions;


	}

	fbInitResult &= SingleInstanceLock(GUID_NULL);
	if(fbInitResult)
	{
		auto fpState = FpControl(FpCtrlSection::Init);
		::A_search_initialize(((RT_MODEL_A_search_T*)PA_search_M));
		((RT_MODEL_A_search_T*)PA_search_M)->dwork->TCModuleInput1_PWORK = reinterpret_cast<PVOID>(&(TcModuleInput_TCModuleInput1));
		((RT_MODEL_A_search_T*)PA_search_M)->dwork->TCModuleInput2_PWORK = reinterpret_cast<PVOID>(&(TcModuleInput_TCModuleInput2));
		((RT_MODEL_A_search_T*)PA_search_M)->dwork->TCModuleInput3_PWORK = reinterpret_cast<PVOID>(&(TcModuleInput_TCModuleInput3));
		((RT_MODEL_A_search_T*)PA_search_M)->dwork->TCModuleInput4_PWORK = reinterpret_cast<PVOID>(&(TcModuleInput_TCModuleInput4));
		((RT_MODEL_A_search_T*)PA_search_M)->dwork->TCModuleInput5_PWORK = reinterpret_cast<PVOID>(&(TcModuleInput_TCModuleInput5));
		((RT_MODEL_A_search_T*)PA_search_M)->dwork->TCModuleInput6_PWORK = reinterpret_cast<PVOID>(&(TcModuleInput_TCModuleInput6));
		((RT_MODEL_A_search_T*)PA_search_M)->dwork->TCModuleOutput_PWORK = reinterpret_cast<PVOID>(&(TcModuleOutput_TCModuleOutput));
		((RT_MODEL_A_search_T*)PA_search_M)->dwork->TCModuleOutput1_PWORK = reinterpret_cast<PVOID>(&(TcModuleOutput_TCModuleOutput1));

		FpRestore(fpState);
	}
	else
	{
		error("SingleInstanceLock() did not succeed");
	}

	return fbInitResult;
}

void CFbA_search::_FB_init(ST_FB_init_FB_A_search* ST_Param)
{
	ST_Param->result = ((CFbA_search*)ST_Param->pInst)->FB_init( ST_Param->bInitRetains, ST_Param->bInCopyCode );
}




BEGIN_FUNC_MAP_FB(CFbA_search)
	FUNC_ENTRY_LIB(VID_A_search, CID_FB_A_SEARCH , "FB_A_search" "__main", CFbA_search::_FB_Main)
FUNC_METHOD_ENTRY_LIB(VID_A_search,CID_FB_A_SEARCH , "FB_EXIT", "FB_A_search" "__FB_exit", CFbA_search::_FB_exit)
FUNC_METHOD_ENTRY_LIB(VID_A_search,CID_FB_A_SEARCH , "FB_INIT", "FB_A_search" "__FB_init", CFbA_search::_FB_init)

END_FUNC_MAP_FB()

DECLARE_FUNCMAP_CREATOR(HandleFuncMap_CFbA_search)
{
	return CFbA_search::TcHandleFuncMap(mode, idx, idxcounter, pFncId, pipFnc, ppMethod, ppName, pSignature, pVersion);
}
